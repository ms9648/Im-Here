A. 전통적인 능동학습 알고리즘
능동학습은 보통 하이퀄리티의 데이터를 수집하는데 사용됨.
전통적인 능동학습의 전략은 다음과 같음
	1. Randomization: 시스템은 item과 user들을 똑같은 확률로 추출함
	2. Popularity-based: 투표를 많이 받은 item or user가 선호되는데 이는 유저가 더 인기있는 아이템들에 평가를 할 가능성이 높다는 가정에 근거함.
	3. Variance-based: 시스템은 노출에 가장 분산이 큰 아이템을 선택함. 그래서 분산이 높은 아이템은 시스템의 확실성을 줄이기 위해 보통 권장됨
	4. Similarity-based: 시스템은 유저가 이전에 평가한 아이템에 가장 유사한 아이템을 선택함.
	5. Hybrid: sqrt(frequency) * variance값을 가짐. 이 값은 1~4방법의 효과를 측정함.

하지만 전통적인 능동학습은 몇 가지 제한사항이 있음
	1. 앞 선 작업들(아래 논문들)은 단 하나의 유저에 대해서는 추천 정확도가 높지만 노출 수가 증가할수록 전체 시스템의 수	행 능력에 영향을 미침
Active learning strategies for rating elicitation in collaborative filtering
Getting to know you: Learning new user preferences in recommender systems
Recommender systems, missing data and statistical model estimation
	2. 게다가 모델은 모든 유저를 반복해서 학습되는데 이거는 계산 비용이 높음. 또, 전통적인 능동학습 전략에서, 다양한 유	저들에게 노출될 아이템들은 항상 같지가 않음. 예를들어 유저가 이전에 평가한 아이템과 유사한 아이템들은 다른 유저들	과 같지 않을지도 모름. 왜냐하면 서로 다른 경험들을 했기 때문에. 그러므로 개인적인 전략이 각 유저에게 반복적으로 적	용되어야 함.
	3. 게다가 현재 능동학습 방식은 조회된 항목에 대해 평가를 할 가능성이 높다는 가정에 근거함. 예를들어 능동학습 전략에 의해 generate된 영화를 평가하는 영화 추천 시스템은 유저가 그 영화를 보아야만 함. 반대로 유저는 유저들이 보지도 않았던 영화를 평가하라고 요청받는다면 frustrated 함

B. 제시하는 방식
1) 인기 아이템을 통해 고밀도를 관측하기
예전에는 일정 rating 이상의 유저들만 추출했는데, 이제는 sub-matrix를 matrix factorization방식으로 original rating matrix에 추가함으로써 모든 유저들을 대상으로 구체적인 rating을 예측할 수 있음.
즉, item-oriented 방식은 전체 시스템의 퍼포먼스를 상향시키기 위해 각 유저별로 반복하는게 아니라 모든 유저들을 대상으로 레이팅을 측정함. 그 결과 계산 복잡도는 N(전체 이용자 수)에서 2로 바뀜.

2) 능동적인 유저들을 통해 고밀도 탐색하기
협업 필터링에 대한 전통적인 능동 학습(예측을 잘 하기 위해 평가할 아이템을 선택하는)에 반해 특정 아이템을 일정 수의 특정 유저에게 노출시킴으로써 레이팅을 산정하는 방식을 제시한 alternative active learning이 있다. 이에 감명받아 user-oriented 방식을 제시해본다.

일반적으로 각 유저들이 평가를 매기는 영화의 수는 그림 3에서와 같이 상당히 다르다. 영화 추천시스템을 예로 들어보면, 비록 능등적인 유저들이 비 능동적인 유저들보다 본 영화의 수가 많음에도 불구하고 영화를 봤는데 아직 평가를 하지않은 영화들이 있다. 그러므로 활동적인 유저들이 평가하지않은 영화들에 레이팅을 줄 가능성이 높다는 것을 알 수 있다. 영화를 좋아하는 사람들은 평가된 영화의 수에 따라 선정된다. 평가하지 않은 아이템들의 레이팅은 matrix factorization algorithm에 의해 예측될 것이다. 이러한 새로운 평점들은 더 나은 추천을 위해 original matrix에 추가된다.
간단하게 말하면 user-oriented 접근은 오직 활동적인 유저들에 의해 제공되는 아이템의 평점을 추가함으로써 전체 시스템의 수행 능력을 향상시키고자 한다. 그러므로 아이템 기반 접근이 가지는 장점도 가지고 있다고 할 수 있따. 하지만 두 알고리즘 역시 여전히 엄청난 계산 비용 문제 또는 기존 모델의 변형의 문제가 있을지도 모른다(많은 sub-matrix의 rating이 추가되면서).

3) ESVD-DENSITY-ORIENTED 접근
지금까지는 아이템 지향 접근법과 유저 지향 접근법이 제시되었는데, 둘 다 선택된 평점 집합을 matrix factorization 모델에 학습시켜 예측하는 생각에 기반한다. 미리 측정된 점수치의 근거는 그 점수들이 밀도있는 서브 매트릭스에서 예측된 것이라는 것입니다. 이는 결측치를 더 정확하게 예측할 수 있기 때문입니다. 전형적으로 매트릭스가 dense할수록 matrix factorization model의 성능이 더 좋습니다. 예를들어 무비렌즈 데이터셋의 경우에는 인기 영화의 5%가 포함된 서브 매트릭스의 밀도는 29.47퍼인데, 이는 original 매트릭스보다 훨씬 댄스합니다. 이러한 관측에 기반하여 ESVD라고 불리는 density-oriented 접근을 제시합니다. 이는 앞서 언급한 아이템 지향, 유저 지향, 고 밀도 탐색 전략을 포함합니다.

Algorithm 1: The Proposed ESVD(Density-Oriented Approach)
입력 값: 
















